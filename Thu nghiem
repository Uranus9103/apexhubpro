-- Fly GUI Mobile - 6DOF | Speed 1 -> Infinity
-- Put this LocalScript in StarterGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- ========= CONFIG =========
local SPEED_START = 50              -- t·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh khi b·∫≠t bay
local SPEED_STEP  = 5               -- m·ªói l·∫ßn +/-
local MIN_SPEED   = 1               -- t·ªëi thi·ªÉu
local RAINBOW_HZ  = 1.5             -- t·ªëc ƒë·ªô ƒë·ªïi m√†u (Hz)

-- ========= STATE =========
local gui, mainFrame
local btnOn, btnOff, btnUp, btnDown, btnPlus, btnMinus, speedLabel
local flyConn, uiConn
local flying = false
local ascend = 0        -- -1 xu·ªëng | 0 ƒë·ª©ng | 1 l√™n (gi·ªØ n√∫t)
local speed  = SPEED_START
local hrp, humanoid
local bv, bg  -- BodyVelocity + BodyGyro

-- ========= UTILS =========
local function rainbow(t, shift)
    local h = (t*RAINBOW_HZ + (shift or 0))%1
    return Color3.fromHSV(h, 1, 1)
end

local function setButtonStyle(btn, color)
    btn.BackgroundColor3 = color
    btn.BorderColor3 = color
end

local function buildGUI()
    if gui then gui:Destroy() end

    gui = Instance.new("ScreenGui")
    gui.Name = "FlyGUI_Mobile"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    mainFrame = Instance.new("Frame")
    mainFrame.Name = "Panel"
    mainFrame.Size = UDim2.new(0, 230, 0, 320)
    mainFrame.Position = UDim2.new(0.80, 0, 0.45, 0) -- ph·∫£i m√†n h√¨nh
    mainFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
    mainFrame.BackgroundTransparency = 0.15
    mainFrame.BorderSizePixel = 4
    mainFrame.Parent = gui
    local corner = Instance.new("UICorner", mainFrame) corner.CornerRadius = UDim.new(0,14)

    local title = Instance.new("TextLabel")
    title.BackgroundTransparency = 1
    title.Size = UDim2.new(1, 0, 0, 32)
    title.Position = UDim2.new(0, 0, 0, 6)
    title.Text = "FLY MOBILE"
    title.TextColor3 = Color3.new(1,1,1)
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame

    local function newBtn(name, text, y)
        local b = Instance.new("TextButton")
        b.Name = name
        b.Size = UDim2.new(1, -20, 0, 40)
        b.Position = UDim2.new(0, 10, 0, y)
        b.Text = text
        b.TextScaled = true
        b.Font = Enum.Font.GothamBold
        b.TextColor3 = Color3.new(1,1,1)
        b.BackgroundColor3 = Color3.fromRGB(50,50,50)
        b.BorderSizePixel = 3
        b.Parent = mainFrame
        local c = Instance.new("UICorner", b) c.CornerRadius = UDim.new(0,10)
        b.AutoButtonColor = false
        return b
    end

    -- B·∫≠t/T·∫Øt
    btnOn    = newBtn("FlyOn",  "üöÄ B·∫¨T BAY",  44)
    btnOff   = newBtn("FlyOff", "üõë T·∫ÆT BAY",  88)

    -- Speed label
    speedLabel = Instance.new("TextLabel")
    speedLabel.Size = UDim2.new(1, -20, 0, 28)
    speedLabel.Position = UDim2.new(0, 10, 0, 132)
    speedLabel.BackgroundTransparency = 1
    speedLabel.Text = "T·ªëc ƒë·ªô: " .. tostring(speed)
    speedLabel.TextScaled = true
    speedLabel.Font = Enum.Font.GothamBold
    speedLabel.TextColor3 = Color3.new(1,1,1)
    speedLabel.Parent = mainFrame

    -- + / -
    btnPlus  = newBtn("Plus",  "+ TƒÉng t·ªëc",  162)
    btnMinus = newBtn("Minus", "‚àí Gi·∫£m t·ªëc", 206)

    -- UP / DOWN (gi·ªØ ƒë·ªÉ bay m∆∞·ª£t)
    btnUp    = newBtn("Up",    "‚¨Ü UP (gi·ªØ)",   250)
    btnDown  = newBtn("Down",  "‚¨á DOWN (gi·ªØ)", 294)

    -- Rainbow for UI (single connection)
    if uiConn then uiConn:Disconnect() end
    uiConn = RunService.RenderStepped:Connect(function()
        local t = tick()
        mainFrame.BorderColor3 = rainbow(t, 0.00)
        setButtonStyle(btnOn,    rainbow(t, 0.05))
        setButtonStyle(btnOff,   rainbow(t, 0.10))
        setButtonStyle(btnPlus,  rainbow(t, 0.15))
        setButtonStyle(btnMinus, rainbow(t, 0.20))
        setButtonStyle(btnUp,    rainbow(t, 0.25))
        setButtonStyle(btnDown,  rainbow(t, 0.30))
    end)
end

local function attachForces()
    if not hrp then return end
    if bv then bv:Destroy() bv=nil end
    if bg then bg:Destroy() bg=nil end

    -- BodyVelocity: kh√¥ng clamp MaxForce theo speed (cho ph√©p "v√¥ h·∫°n")
    bv = Instance.new("BodyVelocity")
    bv.Velocity = Vector3.zero
    bv.MaxForce = Vector3.new(1e9, 1e9, 1e9) -- r·∫•t l·ªõn ƒë·ªÉ ƒë√°p ·ª©ng speed cao
    bv.P = 1e4
    bv.Parent = hrp

    -- BodyGyro: gi·ªØ h∆∞·ªõng theo camera cho c·∫£m gi√°c ‚Äúbay‚Äù
    bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
    bg.P = 1e5
    bg.CFrame = workspace.CurrentCamera.CFrame
    bg.Parent = hrp
end

local function startFly()
    if flying then return end
    if not hrp or not humanoid then return end
    flying = true
    humanoid:ChangeState(Enum.HumanoidStateType.Physics)
    humanoid.AutoRotate = false
    attachForces()

    -- Loop update (single connection)
    if flyConn then flyConn:Disconnect() end
    flyConn = RunService.RenderStepped:Connect(function()
        if not flying or not hrp or not humanoid then return end

        -- Camera axes
        local cam = workspace.CurrentCamera
        local cf  = cam.CFrame
        local look = cf.LookVector
        local right = cf.RightVector

        -- Ti·∫øn/L√πi/Tr√°i/Ph·∫£i l·∫•y t·ª´ joystick (MoveDirection)
        local move2D = humanoid.MoveDirection
        -- Convert (MoveDirection.X,Z) v√†o frame camera
        local planar = (right * move2D.X) + (look * move2D.Z)

        -- Th√†nh ph·∫ßn ƒë·ª©ng (UP/DOWN gi·ªØ n√∫t)
        local vertical = Vector3.new(0, ascend * speed, 0)

        -- V·∫≠n t·ªëc t·ªïng
        local planarVel = Vector3.zero
        if planar.Magnitude > 0 then
            planarVel = planar.Unit * speed
        end

        -- C·∫≠p nh·∫≠t
        if bv then bv.Velocity = planarVel + vertical end
        if bg then bg.CFrame = CFrame.new(hrp.Position, hrp.Position + look) end
    end)
end

local function stopFly()
    if not flying then return end
    flying = false
    ascend = 0
    if flyConn then flyConn:Disconnect() flyConn = nil end
    if bv then bv:Destroy() bv=nil end
    if bg then bg:Destroy() bg=nil end
    if humanoid then
        humanoid.AutoRotate = true
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
    end
    if hrp then
        hrp.AssemblyLinearVelocity = Vector3.zero
        hrp.AssemblyAngularVelocity = Vector3.zero
    end
end

-- ========= BUTTON EVENTS (include mobile hold) =========
local function connectButtons()
    btnOn.MouseButton1Click:Connect(function()
        startFly()
    end)
    btnOff.MouseButton1Click:Connect(function()
        stopFly()
    end)

    btnPlus.MouseButton1Click:Connect(function()
        speed = math.max(MIN_SPEED, speed + SPEED_STEP)
        speedLabel.Text = "T·ªëc ƒë·ªô: " .. tostring(speed)
    end)
    btnMinus.MouseButton1Click:Connect(function()
        speed = math.max(MIN_SPEED, speed - SPEED_STEP)
        speedLabel.Text = "T·ªëc ƒë·ªô: " .. tostring(speed)
    end)

    -- UP/DOWN gi·ªØ ƒë·ªÉ bay m∆∞·ª£t
    btnUp.MouseButton1Down:Connect(function() ascend = 1 end)
    btnUp.MouseButton1Up:Connect(function() if ascend == 1 then ascend = 0 end end)
    btnDown.MouseButton1Down:Connect(function() ascend = -1 end)
    btnDown.MouseButton1Up:Connect(function() if ascend == -1 then ascend = 0 end end)

    -- Ph√≤ng tr∆∞·ªùng h·ª£p ng√≥n tr∆∞·ª£t kh·ªèi n√∫t (mobile)
    btnUp.TouchLeave:Connect(function() if ascend == 1 then ascend = 0 end end)
    btnDown.TouchLeave:Connect(function() if ascend == -1 then ascend = 0 end end)
end

-- ========= CHARACTER (respawn safe) =========
local function onCharacter(char)
    humanoid = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
    stopFly()
end

-- ========= INIT =========
buildGUI()
connectButtons()

if LocalPlayer.Character then onCharacter(LocalPlayer.Character) end
LocalPlayer.CharacterAdded:Connect(onCharacter)

-- Tip: N·∫øu mu·ªën m·∫∑c ƒë·ªãnh b·∫≠t bay khi v√†o game, g·ªçi startFly() ·ªü ƒë√¢y.
